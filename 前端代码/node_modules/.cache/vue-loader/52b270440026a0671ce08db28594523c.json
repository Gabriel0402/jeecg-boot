{"remainingRequest":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenyang/Documents/jeecg-boot/前端代码/src/views/system/SysGatewayRouteList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/src/views/system/SysGatewayRouteList.vue","mtime":1596297340396},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport JsonEditor from 'jsoneditor'\nimport 'jsoneditor/dist/jsoneditor.min.css'\nimport { getAction, postAction } from '@/api/manage'\n\nexport default {\n  name: \"SysGatewayRouteList\",\n  data () {\n    return {\n      eleId:'jsoneditor',\n      description: 'gateway路由管理管理页面',\n      editor: null,\n      editorWidth:400,\n      editorHeight:500,\n      url:{\n        list: '/sys/gatewayRoute/list',\n        update: '/sys/gatewayRoute/updateAll',\n        clear: '/sys/gatewayRoute/clearRedis'\n      },\n\n    }\n  },\n  created() {\n    let winWidth = window.innerWidth;\n    console.log(\"页面宽度\",winWidth)\n    this.editorWidth = winWidth\n\n  },\n  mounted(){\n    this.initJsonEditor();\n  },\n  methods: {\n    initJsonEditor() {\n      let container = document.getElementById(this.eleId);\n      let options = {\n        modes: ['text', 'code', 'tree', 'form', 'view'],\n        mode: 'tree',\n        ace: ace,\n        sortObjectKeys: 'code',\n        mainMenuBar:['format']\n      };\n      this.editor = new JsonEditor(container, options);\n      this.initRouteData();\n    },\n    initRouteData(){\n      getAction(this.url.list).then(res=>{\n        if(res.success){\n          let array = res.result\n          console.log('当前路由配置信息为', array)\n          this.editor.set(array)\n        }\n      })\n    },\n    // 获取json\n    submitForm() {\n      let text = this.editor.getText()\n      console.log(\"保存的json数据\",text)\n      if(!text || text.length<=0 || text=='{}' || text=='[]'){\n        this.$message.warning('未录入任何信息')\n        return ;\n      }\n      postAction(this.url.update,{\n        routes:text\n      }).then(res=>{\n        if(res.success){\n          this.$message.success(res.message)\n        }else{\n          this.$message.error(res.message)\n        }\n      })\n    },\n    clearRedis(){\n      getAction(this.url.clear).then(res=>{\n        if(res.success){\n          this.$message.success(res.message)\n        }\n      })\n    }\n\n  }\n}\n",{"version":3,"sources":["SysGatewayRouteList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"SysGatewayRouteList.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <a-card :bordered=\"false\" style=\"height: 100%\">\n    <div style=\"padding-bottom: 2px\">\n      <a-alert type=\"warning\" show-icon>\n        <div slot=\"message\" style=\"width: 100%\">\n          <span>路由配置请慎重</span>\n          <span style=\"display:inline-block;float:right;padding-right: 5px\">\n            <a @click=\"clearRedis\"><a-icon type=\"reload\" />清除缓存</a>\n          </span>\n        </div>\n      </a-alert>\n    </div>\n    <div :id=\"eleId\" :style=\"{ height: editorHeight + 'px', width: '100%' }\"></div>\n    <div style=\"text-align: center;padding-top:10px\">\n      <a-button type=\"primary\" @click=\"submitForm\" style=\"width:160px\">保存</a-button>\n    </div>\n  </a-card>\n</template>\n\n<script>\n  import JsonEditor from 'jsoneditor'\n  import 'jsoneditor/dist/jsoneditor.min.css'\n  import { getAction, postAction } from '@/api/manage'\n\n  export default {\n    name: \"SysGatewayRouteList\",\n    data () {\n      return {\n        eleId:'jsoneditor',\n        description: 'gateway路由管理管理页面',\n        editor: null,\n        editorWidth:400,\n        editorHeight:500,\n        url:{\n          list: '/sys/gatewayRoute/list',\n          update: '/sys/gatewayRoute/updateAll',\n          clear: '/sys/gatewayRoute/clearRedis'\n        },\n\n      }\n    },\n    created() {\n      let winWidth = window.innerWidth;\n      console.log(\"页面宽度\",winWidth)\n      this.editorWidth = winWidth\n\n    },\n    mounted(){\n      this.initJsonEditor();\n    },\n    methods: {\n      initJsonEditor() {\n        let container = document.getElementById(this.eleId);\n        let options = {\n          modes: ['text', 'code', 'tree', 'form', 'view'],\n          mode: 'tree',\n          ace: ace,\n          sortObjectKeys: 'code',\n          mainMenuBar:['format']\n        };\n        this.editor = new JsonEditor(container, options);\n        this.initRouteData();\n      },\n      initRouteData(){\n        getAction(this.url.list).then(res=>{\n          if(res.success){\n            let array = res.result\n            console.log('当前路由配置信息为', array)\n            this.editor.set(array)\n          }\n        })\n      },\n      // 获取json\n      submitForm() {\n        let text = this.editor.getText()\n        console.log(\"保存的json数据\",text)\n        if(!text || text.length<=0 || text=='{}' || text=='[]'){\n          this.$message.warning('未录入任何信息')\n          return ;\n        }\n        postAction(this.url.update,{\n          routes:text\n        }).then(res=>{\n          if(res.success){\n            this.$message.success(res.message)\n          }else{\n            this.$message.error(res.message)\n          }\n        })\n      },\n      clearRedis(){\n        getAction(this.url.clear).then(res=>{\n          if(res.success){\n            this.$message.success(res.message)\n          }\n        })\n      }\n\n    }\n  }\n</script>\n"]}]}