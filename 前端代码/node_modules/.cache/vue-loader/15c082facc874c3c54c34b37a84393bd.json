{"remainingRequest":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/jeecg/JSwitch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/jeecg/JSwitch.vue","mtime":1596297340379},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  name: 'JSwitch',\n  props: {\n    value:{\n      type: String | Number,\n      required: false\n    },\n    disabled:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    options:{\n      type:Array,\n      required:false,\n      default:()=>['Y','N']\n    },\n    query:{\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  data () {\n    return {\n      checkStatus: false\n    }\n  },\n  watch: {\n    value:{\n      immediate: true,\n      handler(val){\n        if(!this.query){\n          if(!val){\n            this.checkStatus = false\n            this.$emit('change', this.options[1]);\n          }else{\n            if(this.options[0]==val){\n              this.checkStatus = true\n            }else{\n              this.checkStatus = false\n            }\n          }\n        }\n\n      }\n    }\n  },\n  computed:{\n    queryOption(){\n      let arr = []\n      arr.push({value:this.options[0],text:'是'})\n      arr.push({value:this.options[1],text:'否'})\n      return arr;\n    }\n  },\n  methods: {\n    handleChange(checked){\n      let flag = checked===false?this.options[1]:this.options[0];\n      this.$emit('change', flag);\n    },\n    handleSelectChange(value){\n      this.$emit('change', value);\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",null]}