{"remainingRequest":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/jeecg/modal/JPopupOnlReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/jeecg/modal/JPopupOnlReport.vue","mtime":1596297340381},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getAction } from '@/api/manage'\nimport {filterObj} from '@/utils/util'\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\nimport { httpGroupRequest } from '@/api/GroupRequest.js'\n\nconst MODAL_WIDTH = 1200;\nexport default {\n  name: 'JPopupOnlReport',\n  props: ['multi', 'code', 'groupId'],\n  components:{\n  },\n  data(){\n    return {\n      visible:false,\n      title:\"\",\n      confirmLoading:false,\n      queryInfo:[],\n      toggleSearchStatus:false,\n      queryParam:{\n\n      },\n      dictOptions: {},\n      url: {\n        getColumns: '/online/cgreport/api/getRpColumns/',\n        getData: '/online/cgreport/api/getData/',\n        getQueryInfo: '/online/cgreport/api/getQueryInfo/'\n      },\n      table: {\n        loading: true,\n        // 表头\n        columns: [],\n        //数据集\n        dataSource: [],\n        // 选择器\n        selectedRowKeys: [],\n        selectionRows: [],\n        // 分页参数\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        }\n      },\n      cgRpConfigId:\"\",\n      modalWidth:MODAL_WIDTH,\n      tableScroll:{x:MODAL_WIDTH-100}\n\n    }\n  },\n  mounted() {\n    this.loadColumnsInfo()\n  },\n  watch: {\n    code() {\n      this.loadColumnsInfo()\n    }\n  },\n  computed:{\n    showSearchFlag(){\n      return this.queryInfo && this.queryInfo.length>0\n    }\n  },\n  methods:{\n    loadColumnsInfo(){\n      let url = `${this.url.getColumns}${this.code}`\n      //缓存key\n      let groupIdKey\n      if (this.groupId) {\n        groupIdKey = this.groupId + url\n      }\n      httpGroupRequest(() => getAction(url), groupIdKey).then(res => {\n        if(res.success){\n          this.initDictOptionData(res.result.dictOptions);\n          this.cgRpConfigId = res.result.cgRpConfigId\n          this.title = res.result.cgRpConfigName\n          let currColumns = res.result.columns\n          for(let a=0;a<currColumns.length;a++){\n            if(currColumns[a].customRender){\n              let dictCode = currColumns[a].customRender;\n              currColumns[a].customRender=(text)=>{\n                return filterMultiDictText(this.dictOptions[dictCode], text+\"\");\n              }\n            }\n          }\n          this.table.columns = [...currColumns]\n          this.initQueryInfo()\n          this.loadData(1)\n        }\n      })\n    },\n    initQueryInfo() {\n      let url = `${this.url.getQueryInfo}${this.cgRpConfigId}`\n      //缓存key\n      let groupIdKey\n      if (this.groupId) {\n        groupIdKey = this.groupId + url\n      }\n      httpGroupRequest(() => getAction(url), groupIdKey).then((res) => {\n        // console.log(\"获取查询条件\", res);\n        if (res.success) {\n          this.queryInfo = res.result\n        } else {\n          this.$message.warning(res.message)\n        }\n      })\n    },\n    loadData(arg) {\n      if (arg == 1) {\n        this.table.pagination.current = 1\n      }\n      let params = this.getQueryParams();//查询条件\n      this.table.loading = true\n      let url = `${this.url.getData}${this.cgRpConfigId}`\n      //缓存key\n      let groupIdKey\n      if (this.groupId) {\n        groupIdKey = this.groupId + url + JSON.stringify(params)\n      }\n      httpGroupRequest(() => getAction(url, params), groupIdKey).then(res => {\n        this.table.loading = false\n        // console.log(\"daa\",res)\n        let data = res.result\n        if (data) {\n          this.table.pagination.total = Number(data.total)\n          this.table.dataSource = data.records\n        } else {\n          this.table.pagination.total = 0\n          this.table.dataSource = []\n        }\n      })\n    },\n    getQueryParams() {\n      let param = Object.assign({}, this.queryParam, this.sorter);\n      param.pageNo = this.table.pagination.current;\n      param.pageSize = this.table.pagination.pageSize;\n      return filterObj(param);\n    },\n    handleChangeInTableSelect(selectedRowKeys, selectionRows) {\n      this.table.selectedRowKeys = selectedRowKeys\n      this.table.selectionRows = selectionRows\n    },\n    handleChangeInTable(pagination, filters, sorter) {\n      //分页、排序、筛选变化时触发\n      if (Object.keys(sorter).length > 0) {\n        this.sorter.column = sorter.field\n        this.sorter.order = 'ascend' == sorter.order ? 'asc' : 'desc'\n      }\n      this.table.pagination = pagination\n      this.loadData()\n    },\n    handleCancel() {\n      this.close()\n    },\n    handleSubmit() {\n      if(!this.multi){\n        if(this.table.selectionRows && this.table.selectionRows.length>1){\n          this.$message.warning(\"请选择一条记录\")\n          return false\n        }\n      }\n      if(!this.table.selectionRows || this.table.selectionRows.length==0){\n        this.$message.warning(\"请选择一条记录\")\n        return false\n      }\n      this.$emit('ok', this.table.selectionRows);\n      this.close()\n    },\n    close() {\n      this.$emit('close');\n      this.visible = false;\n      this.onClearSelected()\n    },\n    show(){\n      this.visible = true;\n    },\n    handleToggleSearch(){\n      this.toggleSearchStatus = !this.toggleSearchStatus;\n    },\n    searchByquery(){\n      this.loadData(1);\n    },\n    onlyReload(){\n      this.loadData();\n    },\n    searchReset(){\n      Object.keys(this.queryParam).forEach(key=>{\n        this.queryParam[key]=\"\"\n      })\n      this.loadData(1);\n    },\n    onClearSelected(){\n      this.table.selectedRowKeys = []\n      this.table.selectionRows = []\n    },\n    combineRowKey(record){\n      let res = ''\n       Object.keys(record).forEach(key=>{\n         res+=record[key]\n       })\n      if(res.length>50){\n        res = res.substring(0,50)\n      }\n      return res\n    },\n\n    clickThenCheck(record){\n      return {\n        on: {\n          click: () => {\n            let rowKey = this.combineRowKey(record)\n            if(!this.table.selectedRowKeys || this.table.selectedRowKeys.length==0){\n              let arr1=[],arr2=[]\n              arr1.push(record)\n              arr2.push(rowKey)\n              this.table.selectedRowKeys=arr2\n              this.table.selectionRows=arr1\n            }else{\n              if(this.table.selectedRowKeys.indexOf(rowKey)<0){\n                this.table.selectedRowKeys.push(rowKey)\n                this.table.selectionRows.push(record)\n              }else{\n                let rowKey_index = this.table.selectedRowKeys.indexOf(rowKey)\n                this.table.selectedRowKeys.splice(rowKey_index,1);\n                this.table.selectionRows.splice(rowKey_index,1);\n              }\n            }\n          }\n        }\n      }\n    },\n    //防止字典中有垃圾数据\n    initDictOptionData(dictOptions){\n      let obj = { }\n      Object.keys(dictOptions).map(k=>{\n        obj[k] = dictOptions[k].filter(item=>{\n          return item!=null\n        });\n      });\n      this.dictOptions  = obj\n    }\n\n  }\n}\n",null]}