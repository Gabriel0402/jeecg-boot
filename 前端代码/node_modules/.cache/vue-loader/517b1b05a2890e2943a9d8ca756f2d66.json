{"remainingRequest":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/jeecg/JMarkdownEditor/index.vue?vue&type=style&index=0&id=d3139a30&scoped=true&lang=less&","dependencies":[{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/jeecg/JMarkdownEditor/index.vue","mtime":1596297340378},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/css-loader/index.js","mtime":1597311879695},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/less-loader/dist/cjs.js","mtime":1597311877773},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.j-markdown-editor {\n  /deep/ .tui-editor-defaultUI {\n    .te-mode-switch,\n    .tui-scrollsync\n    {\n      line-height: 1.5;\n    }\n  }\n}\n\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/jeecg/JMarkdownEditor","sourcesContent":["<template>\n  <div class=\"j-markdown-editor\" :id=\"id\"/>\n</template>\n\n<script>\nimport 'codemirror/lib/codemirror.css'\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport '@toast-ui/editor/dist/i18n/zh-cn';\n\nimport Editor from '@toast-ui/editor';\nimport defaultOptions from './default-options'\n\nexport default {\n  name: 'JMarkdownEditor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    id: {\n      type: String,\n      required: false,\n      default() {\n        return 'markdown-editor-' + +new Date() + ((Math.random() * 1000).toFixed(0) + '')\n      }\n    },\n    options: {\n      type: Object,\n      default() {\n        return defaultOptions\n      }\n    },\n    mode: {\n      type: String,\n      default: 'markdown'\n    },\n    height: {\n      type: String,\n      required: false,\n      default: '300px'\n    },\n    language: {\n      type: String,\n      required: false,\n      default: 'zh-CN'\n    }\n  },\n  data() {\n    return {\n      editor: null\n    }\n  },\n  computed: {\n    editorOptions() {\n      const options = Object.assign({}, defaultOptions, this.options)\n      options.initialEditType = this.mode\n      options.height = this.height\n      options.language = this.language\n      return options\n    }\n  },\n  watch: {\n    value(newValue, preValue) {\n      if (newValue !== preValue && newValue !== this.editor.getMarkdown()) {\n        this.editor.setMarkdown(newValue)\n      }\n    },\n    language(val) {\n      this.destroyEditor()\n      this.initEditor()\n    },\n    height(newValue) {\n      this.editor.height(newValue)\n    },\n    mode(newValue) {\n      this.editor.changeMode(newValue)\n    }\n  },\n  mounted() {\n    this.initEditor()\n  },\n  destroyed() {\n    this.destroyEditor()\n  },\n  methods: {\n    initEditor() {\n      this.editor = new Editor({\n        el: document.getElementById(this.id),\n        ...this.editorOptions\n      })\n      if (this.value) {\n        this.editor.setMarkdown(this.value)\n      }\n      this.editor.on('change', () => {\n        this.$emit('change', this.editor.getMarkdown())\n      })\n    },\n    destroyEditor() {\n      if (!this.editor) return\n      this.editor.off('change')\n      this.editor.remove()\n    },\n    setMarkdown(value) {\n      this.editor.setMarkdown(value)\n    },\n    getMarkdown() {\n      return this.editor.getMarkdown()\n    },\n    setHtml(value) {\n      this.editor.setHtml(value)\n    },\n    getHtml() {\n      return this.editor.getHtml()\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n</script>\n<style scoped lang=\"less\">\n\n  .j-markdown-editor {\n    /deep/ .tui-editor-defaultUI {\n      .te-mode-switch,\n      .tui-scrollsync\n      {\n        line-height: 1.5;\n      }\n    }\n  }\n\n</style>"]}]}