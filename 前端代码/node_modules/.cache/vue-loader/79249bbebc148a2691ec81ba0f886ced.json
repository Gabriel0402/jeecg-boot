{"remainingRequest":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenyang/Documents/jeecg-boot/前端代码/src/views/user/Login.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/src/views/user/Login.vue","mtime":1596300572645},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/css-loader/index.js","mtime":1597311879695},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.valid-error .ant-select-selection__placeholder{\n  color: #f5222d;\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAycA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div class=\"main\">\n    <a-form :form=\"form\" class=\"user-layout-login\" ref=\"formLogin\" id=\"formLogin\">\n      <a-tabs\n        :activeKey=\"customActiveKey\"\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\n        @change=\"handleTabClick\">\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登陆\">\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              v-decorator=\"['username',validatorRules.username,{ validator: this.handleUsernameOrEmail }]\"\n              type=\"text\"\n              placeholder=\"请输入帐户名\">\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-form-item>\n            <a-input\n              v-decorator=\"['password',validatorRules.password]\"\n              size=\"large\"\n              type=\"password\"\n              autocomplete=\"false\"\n              placeholder=\"密码\">\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-row :gutter=\"0\">\n            <a-col :span=\"16\">\n              <a-form-item>\n                <a-input\n                  v-decorator=\"['inputCode',validatorRules.inputCode]\"\n                  size=\"large\"\n                  type=\"text\"\n                  @change=\"inputCodeChange\"\n                  placeholder=\"请输入验证码\">\n                  <a-icon slot=\"prefix\" type=\"smile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"8\" style=\"text-align: right\">\n              <img v-if=\"requestCodeSuccess\" style=\"margin-top: 2px;\" :src=\"randCodeImage\" @click=\"handleChangeCheckCode\"/>\n              <img v-else style=\"margin-top: 2px;\" src=\"../../assets/checkcode.png\" @click=\"handleChangeCheckCode\"/>\n            </a-col>\n          </a-row>\n\n\n        </a-tab-pane>\n        <!-- <a-tab-pane key=\"tab2\" tab=\"手机号登陆\">\n          <a-form-item>\n            <a-input\n              v-decorator=\"['mobile',validatorRules.mobile]\"\n              size=\"large\"\n              type=\"text\"\n              placeholder=\"手机号\">\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-row :gutter=\"16\">\n            <a-col class=\"gutter-row\" :span=\"16\">\n              <a-form-item>\n                <a-input\n                  v-decorator=\"['captcha',validatorRules.captcha]\"\n                  size=\"large\"\n                  type=\"text\"\n                  placeholder=\"请输入验证码\">\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col class=\"gutter-row\" :span=\"8\">\n              <a-button\n                class=\"getCaptcha\"\n                tabindex=\"-1\"\n                :disabled=\"state.smsSendBtn\"\n                @click.stop.prevent=\"getCaptcha\"\n                v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"></a-button>\n            </a-col>\n          </a-row>\n        </a-tab-pane> -->\n      </a-tabs>\n\n      <a-form-item>\n        <a-checkbox v-decorator=\"['rememberMe', {initialValue: true, valuePropName: 'checked'}]\" >自动登陆</a-checkbox>\n        <router-link :to=\"{ name: 'alteration'}\" class=\"forge-password\" style=\"float: right;\">\n          忘记密码\n        </router-link>\n       <router-link :to=\"{ name: 'register'}\" class=\"forge-password\" style=\"float: right;margin-right: 10px\" >\n          注册账户\n        </router-link>\n      </a-form-item>\n\n      <a-form-item style=\"margin-top:24px\">\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"login-button\"\n          :loading=\"loginBtn\"\n          @click.stop.prevent=\"handleSubmit\"\n          :disabled=\"loginBtn\">确定\n        </a-button>\n      </a-form-item>\n\n      <!-- <div class=\"user-login-other\">\n        <span>其他登陆方式</span>\n        <a @click=\"onThirdLogin('github')\" title=\"github\"><a-icon class=\"item-icon\" type=\"github\"></a-icon></a>\n        <a @click=\"onThirdLogin('wechat_enterprise')\" title=\"企业微信\"><a-icon class=\"item-icon\" type=\"wechat\"></a-icon></a>\n        <a @click=\"onThirdLogin('dingtalk')\" title=\"钉钉\"><a-icon class=\"item-icon\" type=\"dingding\"></a-icon></a>\n      </div> -->\n    </a-form>\n\n    <two-step-captcha\n      v-if=\"requiredTwoStepCaptcha\"\n      :visible=\"stepCaptchaVisible\"\n      @success=\"stepCaptchaSuccess\"\n      @cancel=\"stepCaptchaCancel\"></two-step-captcha>\n    <login-select-modal ref=\"loginSelect\" @success=\"loginSelectOk\"></login-select-modal>\n  </div>\n</template>\n\n<script>\n  //import md5 from \"md5\"\n  import api from '@/api'\n  import TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\n  import { mapActions } from \"vuex\"\n  import { timeFix } from \"@/utils/util\"\n  import Vue from 'vue'\n  import { ACCESS_TOKEN ,ENCRYPTED_STRING} from \"@/store/mutation-types\"\n  import { putAction,postAction,getAction } from '@/api/manage'\n  import { encryption , getEncryptedString } from '@/utils/encryption/aesEncrypt'\n  import store from '@/store/'\n  import { USER_INFO } from \"@/store/mutation-types\"\n  import LoginSelectModal from './LoginSelectModal.vue'\n\n  export default {\n    components: {\n      TwoStepCaptcha,\n      LoginSelectModal\n    },\n    data () {\n      return {\n        customActiveKey: \"tab1\",\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        requiredTwoStepCaptcha: false,\n        stepCaptchaVisible: false,\n        form: this.$form.createForm(this),\n        encryptedString:{\n          key:\"\",\n          iv:\"\",\n        },\n        state: {\n          time: 60,\n          smsSendBtn: false,\n        },\n        validatorRules:{\n          username:{rules: [{ required: true, message: '请输入用户名!'},{validator: this.handleUsernameOrEmail}]},\n          password:{rules: [{ required: true, message: '请输入密码!',validator: 'click'}]},\n          mobile:{rules: [{validator:this.validateMobile}]},\n          captcha:{rule: [{ required: true, message: '请输入验证码!'}]},\n          inputCode:{rules: [{ required: true, message: '请输入验证码!'}]}\n        },\n        verifiedCode:\"\",\n        inputCodeContent:\"\",\n        inputCodeNull:true,\n        currentUsername:\"\",\n        currdatetime:'',\n        randCodeImage:'',\n        requestCodeSuccess:false\n      }\n    },\n    created () {\n      this.currdatetime = new Date().getTime();\n      Vue.ls.remove(ACCESS_TOKEN)\n      this.getRouterData();\n      this.handleChangeCheckCode();\n      // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\n      //this.getEncrypte();\n      // update-end- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\n    },\n    methods: {\n      ...mapActions([ \"Login\", \"Logout\",\"PhoneLogin\",\"ThirdLogin\" ]),\n      //第三方登录\n      onThirdLogin(source){\n        let url = window._CONFIG['domianURL']+`/thirdLogin/render/${source}`\n        window.open(url, `login ${source}`, 'height=500, width=500, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no')\n        let that = this;\n        let receiveMessage = function(event){\n          var origin = event.origin\n          console.log(\"origin\",origin);\n\n          let token = event.data\n          console.log(\"event.data\",token)\n          that.ThirdLogin(token).then(res=>{\n            if(res.success){\n              that.loginSuccess()\n            }else{\n              that.requestFailed(res);\n            }\n          })\n        }\n        window.addEventListener(\"message\", receiveMessage, false);\n      },\n      // handler\n      handleUsernameOrEmail (rule, value, callback) {\n        const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n        if (regex.test(value)) {\n          this.loginType = 0\n        } else {\n          this.loginType = 1\n        }\n        callback()\n      },\n      handleTabClick (key) {\n        this.customActiveKey = key\n        // this.form.resetFields()\n      },\n      handleSubmit () {\n        let that = this\n        let loginParams = {};\n        that.loginBtn = true;\n        // 使用账户密码登陆\n        if (that.customActiveKey === 'tab1') {\n          that.form.validateFields([ 'username', 'password','inputCode', 'rememberMe' ], { force: true }, (err, values) => {\n            if (!err) {\n              loginParams.username = values.username\n              // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\n              //loginParams.password = md5(values.password)\n              //loginParams.password = encryption(values.password,that.encryptedString.key,that.encryptedString.iv)\n              loginParams.password = values.password\n              loginParams.remember_me = values.rememberMe\n              // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\n              loginParams.captcha = that.inputCodeContent\n              loginParams.checkKey = that.currdatetime\n              console.log(\"登录参数\",loginParams)\n              that.Login(loginParams).then((res) => {\n                this.$refs.loginSelect.show(res.result)\n              }).catch((err) => {\n                that.requestFailed(err);\n              });\n\n\n            }else {\n              that.loginBtn = false;\n            }\n          })\n          // 使用手机号登陆\n        } else {\n          that.form.validateFields([ 'mobile', 'captcha', 'rememberMe' ], { force: true }, (err, values) => {\n            if (!err) {\n              loginParams.mobile = values.mobile\n              loginParams.captcha = values.captcha\n              loginParams.remember_me = values.rememberMe\n              that.PhoneLogin(loginParams).then((res) => {\n                console.log(res.result);\n                this.$refs.loginSelect.show(res.result)\n              }).catch((err) => {\n                that.requestFailed(err);\n              })\n\n            }\n          })\n        }\n      },\n      getCaptcha (e) {\n        e.preventDefault();\n        let that = this;\n        this.form.validateFields([ 'mobile' ], { force: true },(err,values) => {\n            if(!values.mobile){\n              that.cmsFailed(\"请输入手机号\");\n            }else if (!err) {\n              this.state.smsSendBtn = true;\n              let interval = window.setInterval(() => {\n                if (that.state.time-- <= 0) {\n                  that.state.time = 60;\n                  that.state.smsSendBtn = false;\n                  window.clearInterval(interval);\n                }\n              }, 1000);\n\n              const hide = this.$message.loading('验证码发送中..', 0);\n              let smsParams = {};\n                  smsParams.mobile=values.mobile;\n                  smsParams.smsmode=\"0\";\n              postAction(\"/sys/sms\",smsParams)\n                .then(res => {\n                  if(!res.success){\n                    setTimeout(hide, 0);\n                    this.cmsFailed(res.message);\n                  }\n                  console.log(res);\n                  setTimeout(hide, 500);\n                })\n                .catch(err => {\n                  setTimeout(hide, 1);\n                  clearInterval(interval);\n                  that.state.time = 60;\n                  that.state.smsSendBtn = false;\n                  this.requestFailed(err);\n                });\n            }\n          }\n        );\n      },\n      stepCaptchaSuccess () {\n        this.loginSuccess()\n      },\n      stepCaptchaCancel () {\n        this.Logout().then(() => {\n          this.loginBtn = false\n          this.stepCaptchaVisible = false\n        })\n      },\n      handleChangeCheckCode(){\n        this.currdatetime = new Date().getTime();\n        getAction(`/sys/randomImage/${this.currdatetime}`).then(res=>{\n          if(res.success){\n            this.randCodeImage = res.result\n            this.requestCodeSuccess=true\n          }else{\n            this.$message.error(res.message)\n            this.requestCodeSuccess=false\n          }\n        }).catch(()=>{\n          this.requestCodeSuccess=false\n        })\n      },\n      loginSuccess () {\n        // update-begin- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\n        // this.loginBtn = false\n        // update-end- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\n        this.$router.push({ path: \"/dashboard/analysis\" }).catch(()=>{\n          console.log('登录跳转首页出错,这个错误从哪里来的')\n        })\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`,\n        });\n      },\n      cmsFailed(err){\n        this.$notification[ 'error' ]({\n          message: \"登录失败\",\n          description:err,\n          duration: 4,\n        });\n      },\n      requestFailed (err) {\n        this.$notification[ 'error' ]({\n          message: '登录失败',\n          description: ((err.response || {}).data || {}).message || err.message || \"请求出现错误，请稍后再试\",\n          duration: 4,\n        });\n        this.loginBtn = false;\n      },\n      validateMobile(rule,value,callback){\n        if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)){\n          callback();\n        }else{\n          callback(\"您的手机号码格式不正确!\");\n        }\n\n      },\n      validateInputCode(rule,value,callback){\n        if(!value || this.verifiedCode==this.inputCodeContent){\n          callback();\n        }else{\n          callback(\"您输入的验证码不正确!\");\n        }\n      },\n      generateCode(value){\n        this.verifiedCode = value.toLowerCase()\n      },\n      inputCodeChange(e){\n        this.inputCodeContent = e.target.value\n      },\n      loginSelectOk(){\n        this.loginSuccess()\n      },\n    getRouterData(){\n      this.$nextTick(() => {\n        if (this.$route.params.username) {\n          this.form.setFieldsValue({\n            'username': this.$route.params.username\n          });\n        }\n      })\n    },\n    //获取密码加密规则\n    getEncrypte(){\n      var encryptedString = Vue.ls.get(ENCRYPTED_STRING);\n      if(encryptedString == null){\n        getEncryptedString().then((data) => {\n          this.encryptedString = data\n        });\n      }else{\n        this.encryptedString = encryptedString;\n      }\n    },\n    }\n  }\n</script>\n\n<style lang=\"less\" scoped>\n\n  .user-layout-login {\n    label {\n      font-size: 14px;\n    }\n\n    .getCaptcha {\n      display: block;\n      width: 100%;\n      height: 40px;\n    }\n\n    .forge-password {\n      font-size: 14px;\n    }\n\n    button.login-button {\n      padding: 0 15px;\n      font-size: 16px;\n      height: 40px;\n      width: 100%;\n    }\n\n    .user-login-other {\n      text-align: left;\n      margin-top: 24px;\n      line-height: 22px;\n\n      .item-icon {\n        font-size: 24px;\n        color: rgba(0,0,0,.2);\n        margin-left: 16px;\n        vertical-align: middle;\n        cursor: pointer;\n        transition: color .3s;\n\n        &:hover {\n          color: #1890ff;\n        }\n      }\n\n      .register {\n        float: right;\n      }\n    }\n  }\n\n</style>\n<style>\n  .valid-error .ant-select-selection__placeholder{\n    color: #f5222d;\n  }\n</style>"]}]}