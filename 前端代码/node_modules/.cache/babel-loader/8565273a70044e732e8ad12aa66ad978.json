{"remainingRequest":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/thread-loader/dist/cjs.js!/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/eslint-loader/index.js??ref--13-0!/Users/chenyang/Documents/jeecg-boot/前端代码/src/utils/request.js","dependencies":[{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/src/utils/request.js","mtime":1596297340390},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from 'vue';\nimport axios from 'axios';\nimport store from '@/store';\nimport { VueAxios } from './axios';\nimport { Modal, notification } from 'ant-design-vue';\nimport { ACCESS_TOKEN, TENANT_ID } from \"@/store/mutation-types\";\n/**\n * 【指定 axios的 baseURL】\n * 如果手工指定 baseURL: '/jeecg-boot'\n * 则映射后端域名，通过 vue.config.js\n * @type {*|string}\n */\n\nvar apiBaseUrl = window._CONFIG['domianURL'] || \"/jeecg-boot\"; //console.log(\"apiBaseUrl= \",apiBaseUrl)\n// 创建 axios 实例\n\nvar service = axios.create({\n  //baseURL: '/jeecg-boot',\n  baseURL: apiBaseUrl,\n  // api base_url\n  timeout: 9000 // 请求超时时间\n\n});\n\nvar err = function err(error) {\n  if (error.response) {\n    var that = _this;\n    var data = error.response.data;\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    console.log(\"------异常响应------\", token);\n    console.log(\"------异常响应------\", error.response.status);\n\n    switch (error.response.status) {\n      case 403:\n        notification.error({\n          message: '系统提示',\n          description: '拒绝访问',\n          duration: 4\n        });\n        break;\n\n      case 500:\n        //notification.error({ message: '系统提示', description:'Token失效，请重新登录!',duration: 4})\n        if (token && data.message == \"Token失效，请重新登录\") {\n          // update-begin- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n          // store.dispatch('Logout').then(() => {\n          //     window.location.reload()\n          // })\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: function onOk() {\n              store.dispatch('Logout').then(function () {\n                Vue.ls.remove(ACCESS_TOKEN);\n\n                try {\n                  var path = that.$route.path;\n\n                  if (path.indexOf('/user/login') == -1) {\n                    window.location.reload();\n                  }\n                } catch (e) {\n                  window.location.reload();\n                }\n              });\n            }\n          }); // update-end- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n        }\n\n        break;\n\n      case 404:\n        notification.error({\n          message: '系统提示',\n          description: '很抱歉，资源未找到!',\n          duration: 4\n        });\n        break;\n\n      case 504:\n        notification.error({\n          message: '系统提示',\n          description: '网络超时'\n        });\n        break;\n\n      case 401:\n        notification.error({\n          message: '系统提示',\n          description: '未授权，请重新登录',\n          duration: 4\n        });\n\n        if (token) {\n          store.dispatch('Logout').then(function () {\n            setTimeout(function () {\n              window.location.reload();\n            }, 1500);\n          });\n        }\n\n        break;\n\n      default:\n        notification.error({\n          message: '系统提示',\n          description: data.message,\n          duration: 4\n        });\n        break;\n    }\n  }\n\n  return Promise.reject(error);\n}; // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  var token = Vue.ls.get(ACCESS_TOKEN);\n\n  if (token) {\n    config.headers['X-Access-Token'] = token; // 让每个请求携带自定义 token 请根据实际情况自行修改\n  } //update-begin-author:taoyan date:2020707 for:多租户\n\n\n  var tenantid = Vue.ls.get(TENANT_ID);\n\n  if (!tenantid) {\n    tenantid = 0;\n  }\n\n  config.headers['tenant_id'] = tenantid; //update-end-author:taoyan date:2020707 for:多租户\n\n  if (config.method == 'get') {\n    if (config.url.indexOf(\"sys/dict/getDictItems\") < 0) {\n      config.params = _objectSpread({\n        _t: Date.parse(new Date()) / 1000\n      }, config.params);\n    }\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use(function (response) {\n  return response.data;\n}, err);\nvar installer = {\n  vm: {},\n  install: function install(Vue) {\n    var router = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    Vue.use(VueAxios, router, service);\n  }\n};\nexport { installer as VueAxios, service as axios };",null]}