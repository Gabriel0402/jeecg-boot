{"remainingRequest":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/thread-loader/dist/cjs.js!/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/jeecg/JPopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/jeecg/JPopup.vue","mtime":1596297340378},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JPopupOnlReport from './modal/JPopupOnlReport';\nexport default {\n  name: 'JPopup',\n  components: {\n    JPopupOnlReport: JPopupOnlReport\n  },\n  props: {\n    code: {\n      type: String,\n      default: '',\n      required: false\n    },\n    field: {\n      type: String,\n      default: '',\n      required: false\n    },\n    orgFields: {\n      type: String,\n      default: '',\n      required: false\n    },\n    destFields: {\n      type: String,\n      default: '',\n      required: false\n    },\n    width: {\n      type: Number,\n      default: 1200,\n      required: false\n    },\n    placeholder: {\n      type: String,\n      default: '请选择',\n      required: false\n    },\n    value: {\n      type: String,\n      required: false\n    },\n    triggerChange: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    multi: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n\n    /** 分组ID，用于将多个popup的请求合并到一起，不传不分组 */\n    groupId: String\n  },\n  data: function data() {\n    return {\n      showText: '',\n      title: '',\n      avalid: true\n    };\n  },\n  computed: {\n    uniqGroupId: function uniqGroupId() {\n      if (this.groupId) {\n        var groupId = this.groupId,\n            code = this.code,\n            field = this.field,\n            orgFields = this.orgFields,\n            destFields = this.destFields;\n        return \"\".concat(groupId, \"_\").concat(code, \"_\").concat(field, \"_\").concat(orgFields, \"_\").concat(destFields);\n      }\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(val) {\n        if (!val) {\n          this.showText = '';\n        } else {\n          this.showText = val;\n        }\n      }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    if (!this.orgFields || !this.destFields || !this.code) {\n      this.$message.error('popup参数未正确配置!');\n      this.avalid = false;\n    }\n\n    if (this.destFields.split(',').length != this.orgFields.split(',').length) {\n      this.$message.error('popup参数未正确配置,原始值和目标值数量不一致!');\n      this.avalid = false;\n    }\n  },\n  methods: {\n    openModal: function openModal() {\n      if (this.disabled === false) {\n        this.$refs.jPopupOnlReport.show();\n      }\n    },\n    handleEmpty: function handleEmpty() {\n      this.showText = '';\n      var destFieldsArr = this.destFields.split(',');\n\n      if (destFieldsArr.length === 0) {\n        return;\n      }\n\n      var res = {};\n\n      for (var i = 0; i < destFieldsArr.length; i++) {\n        res[destFieldsArr[i]] = '';\n      }\n\n      if (this.triggerChange) {\n        this.$emit('callback', res);\n      } else {\n        this.$emit('input', '', res);\n      }\n    },\n    callBack: function callBack(rows) {\n      // update--begin--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n      var orgFieldsArr = this.orgFields.split(',');\n      var destFieldsArr = this.destFields.split(',');\n      var resetText = false;\n\n      if (this.field && this.field.length > 0) {\n        this.showText = '';\n        resetText = true;\n      }\n\n      var res = {};\n\n      if (orgFieldsArr.length > 0) {\n        for (var i = 0; i < orgFieldsArr.length; i++) {\n          var tempDestArr = [];\n\n          var _iterator = _createForOfIteratorHelper(rows),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var rw = _step.value;\n              var val = rw[orgFieldsArr[i]];\n\n              if (!val) {\n                val = \"\";\n              }\n\n              tempDestArr.push(val);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          res[destFieldsArr[i]] = tempDestArr.join(\",\");\n        }\n\n        if (resetText === true) {\n          var tempText = [];\n\n          var _iterator2 = _createForOfIteratorHelper(rows),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _rw = _step2.value;\n\n              var _val = _rw[orgFieldsArr[destFieldsArr.indexOf(this.field)]];\n\n              if (!_val) {\n                _val = \"\";\n              }\n\n              tempText.push(_val);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          this.showText = tempText.join(\",\");\n        } // update--end--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n\n      }\n\n      if (this.triggerChange) {\n        //v-dec时即triggerChange为true时 将整个对象给form页面 让他自己setFieldsValue\n        this.$emit('callback', res);\n      } else {\n        //v-model时 需要传一个参数field 表示当前这个字段 从而根据这个字段的顺序找到原始值\n        // this.$emit(\"input\",row[orgFieldsArr[destFieldsArr.indexOf(this.field)]])\n        this.$emit('input', this.showText, res);\n      }\n    }\n  }\n};",null]}