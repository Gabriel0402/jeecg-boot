{"remainingRequest":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/eslint-loader/index.js??ref--13-0!/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/_util/Area.js","dependencies":[{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/_util/Area.js","mtime":1591467542195},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { pcaa } from 'area-data';\n/**\n * 省市区\n */\n\nvar Area = /*#__PURE__*/function () {\n  /**\n   * 构造器\n   * @param express\n   */\n  function Area() {\n    _classCallCheck(this, Area);\n\n    var arr = [];\n    var province = pcaa['86'];\n    Object.keys(province).map(function (key) {\n      arr.push({\n        id: key,\n        text: province[key],\n        pid: '86'\n      });\n      var city = pcaa[key];\n      Object.keys(city).map(function (key2) {\n        arr.push({\n          id: key2,\n          text: city[key2],\n          pid: key\n        });\n        var qu = pcaa[key2];\n        Object.keys(qu).map(function (key3) {\n          arr.push({\n            id: key3,\n            text: qu[key3],\n            pid: key2\n          });\n        });\n      });\n    });\n    this.all = arr;\n  }\n\n  _createClass(Area, [{\n    key: \"getCode\",\n    value: function getCode(text) {\n      if (!text || text.length == 0) {\n        return '';\n      }\n\n      var _iterator = _createForOfIteratorHelper(this.all),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n\n          if (item.text === text) {\n            return item.id;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(code) {\n      if (!code || code.length == 0) {\n        return '';\n      }\n\n      var arr = [];\n      this.getAreaBycode(code, arr);\n      return arr.join('/');\n    }\n  }, {\n    key: \"getRealCode\",\n    value: function getRealCode(code) {\n      var arr = [];\n      this.getPcode(code, arr);\n      return arr;\n    }\n  }, {\n    key: \"getPcode\",\n    value: function getPcode(id, arr) {\n      var _iterator2 = _createForOfIteratorHelper(this.all),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n\n          if (item.id === id) {\n            arr.unshift(id);\n\n            if (item.pid != '86') {\n              this.getPcode(item.pid, arr);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"getAreaBycode\",\n    value: function getAreaBycode(code, arr) {\n      //console.log(\"this.all.length\",this.all)\n      var _iterator3 = _createForOfIteratorHelper(this.all),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var item = _step3.value;\n\n          if (item.id === code) {\n            arr.unshift(item.text);\n            this.getAreaBycode(item.pid, arr);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"pca\",\n    get: function get() {\n      return this.all;\n    }\n  }]);\n\n  return Area;\n}();\n\nexport { Area as default };",{"version":3,"sources":["/Users/chenyang/Documents/jeecg-boot/前端代码/src/components/_util/Area.js"],"names":["pcaa","Area","arr","province","Object","keys","map","key","push","id","text","pid","city","key2","qu","key3","all","length","item","code","getAreaBycode","join","getPcode","unshift"],"mappings":"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","sourcesContent":["import { pcaa } from 'area-data'\n\n/**\n * 省市区\n */\nexport default class Area {\n  /**\n   * 构造器\n   * @param express\n   */\n  constructor() {\n    let arr = []\n    const province = pcaa['86']\n    Object.keys(province).map(key=>{\n      arr.push({id:key, text:province[key], pid:'86'});\n      const city = pcaa[key];\n      Object.keys(city).map(key2=>{\n        arr.push({id:key2, text:city[key2], pid:key});\n        const qu = pcaa[key2];\n        Object.keys(qu).map(key3=>{\n          arr.push({id:key3, text:qu[key3], pid:key2});\n        })\n      })\n    })\n    this.all = arr;\n  }\n\n  get pca(){\n    return this.all;\n  }\n\n  getCode(text){\n    if(!text || text.length==0){\n      return ''\n    }\n    for(let item of this.all){\n      if(item.text === text){\n        return item.id;\n      }\n    }\n  }\n\n  getText(code){\n    if(!code || code.length==0){\n      return ''\n    }\n    let arr = []\n    this.getAreaBycode(code,arr);\n    return arr.join('/')\n  }\n\n  getRealCode(code){\n    let arr = []\n    this.getPcode(code, arr)\n    return arr;\n  }\n\n  getPcode(id, arr){\n    for(let item of this.all){\n      if(item.id === id){\n        arr.unshift(id)\n        if(item.pid != '86'){\n          this.getPcode(item.pid,arr)\n        }\n      }\n    }\n  }\n\n  getAreaBycode(code,arr){\n    //console.log(\"this.all.length\",this.all)\n    for(let item of this.all){\n      if(item.id === code){\n        arr.unshift(item.text);\n        this.getAreaBycode(item.pid,arr)\n      }\n    }\n  }\n\n}"]}]}