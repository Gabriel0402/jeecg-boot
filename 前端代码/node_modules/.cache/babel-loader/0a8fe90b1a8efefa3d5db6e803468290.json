{"remainingRequest":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/thread-loader/dist/cjs.js!/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenyang/Documents/jeecg-boot/前端代码/src/views/system/modules/TenantForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/src/views/system/modules/TenantForm.vue","mtime":1596297340399},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyang/Documents/jeecg-boot/前端代码/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction, getAction } from '@/api/manage';\nimport pick from 'lodash.pick';\nimport { validateDuplicateValue } from '@/utils/util';\nimport JFormContainer from '@/components/jeecg/JFormContainer';\nimport JDate from '@/components/jeecg/JDate';\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\";\nexport default {\n  name: \"TenantForm\",\n  components: {\n    JFormContainer: JFormContainer,\n    JDate: JDate,\n    JDictSelectTag: JDictSelectTag\n  },\n  props: {\n    formData: {\n      type: Object,\n      default: function _default() {},\n      required: false\n    },\n    normal: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {},\n      url: {\n        add: \"/sys/tenant/add\",\n        edit: \"/sys/tenant/edit\",\n        queryById: \"/sys/tenant/queryById\"\n      }\n    };\n  },\n  computed: {\n    formDisabled: function formDisabled() {\n      if (this.normal === false) {\n        if (this.formData.disabled === false) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n\n      return this.disabled;\n    },\n    showFlowSubmitButton: function showFlowSubmitButton() {\n      if (this.normal === false) {\n        if (this.formData.disabled === false) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  },\n  created: function created() {\n    this.showFlowData();\n  },\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'id', 'name', 'beginDate', 'endDate', 'status'));\n      });\n    },\n    showFlowData: function showFlowData() {\n      var _this2 = this;\n\n      if (this.normal === false) {\n        var params = {\n          id: this.formData.dataId\n        };\n        getAction(this.url.queryById, params).then(function (res) {\n          if (res.success) {\n            _this2.edit(res.result);\n          }\n        });\n      }\n    },\n    submitForm: function submitForm() {\n      var _this3 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this3.model.id) {\n            httpurl += _this3.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this3.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this3.model, values);\n          console.log(\"表单提交数据\", formData);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n          });\n        }\n      });\n    },\n    popupCallback: function popupCallback(row) {\n      this.form.setFieldsValue(pick(row, 'id', 'name', 'beginDate', 'endDate', 'status'));\n    }\n  }\n};",null]}